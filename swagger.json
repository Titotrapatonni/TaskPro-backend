{
  "openapi": "3.0.3",
  "info": {
    "version": "2.0.2",
    "title": "Task Pro API docs",
    "description": "**API documentation for Task Pro application.** <p>Цей проєкт є веб-додатком особистого кабінету, в якому є можливість створювати свої дошки з задачами. <p>*Головна мета проєкту* полягає в тому, щоб надати можливість користувачам швидко створювати план різних задач та відслідковувати їх виконання. У проєкті передбачено можливість реєстрації користувачів, їх аутентифікації та авторизації. Також, користувачі можуть створювати будь яку кількість дошок під різні цілі. В кожній дошці є можливість створювати колонки за категоріями для поділу робіт, та задачі, яким можна встановлювати рівень пріорітетності та термін дедлайну. Є можливість редагування та видалення. <p>**Функціональні можливості:** <p>- реєстрація та авторизація користувачів; <p>- зміна аватару користувача та теми додатку; <p>- додавання, видалення, коригування та зміна фону дошок користувача;<p>- за допомогою  колонок є можлівість поділу задач на категорії;<p>- додавання, видалення, зміна пріоритетності та терміну дедлайну в задачах. <p>**Стек технологій, що використовується у проєкті:** <p>Node.js - середовище виконання JavaScript на сервері. <p>Express.js - фреймворк для розробки веб-додатків на Node.js. <p>MongoDB - NoSQL база даних. <p>Mongoose - бібліотека для роботи з MongoDB у Node.js. ",

    "contact": {
      "name": "Code Ninjas",
      "url": "https://github.com/Titotrapatonni/TaskPro-backend"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://task-pro-backend.onrender.com/", "description": "Production" },
    { "url": "http://localhost:3001", "description": "Development" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    },
    {
      "name": "Backgrounds",
      "description": "Board's background endpoints"
    },
    {
      "name": "Help",
      "description": "Need help endpoints"
    }
  ],
  "paths": {
    "/users/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "User Google registration",
        "parameters": [],

        "responses": {
          "200": {
            "description": "OK (Successful operation (redirect to front-end with access Token in query). Then use GET /user)"
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },

    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing fields)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictResponse"
                }
              }
            }
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "parameters": [],
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "204": {
            "description": "Logout successful",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/theme": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Change current user's theme",
        "parameters": [],
        "requestBody": {
          "description": "Change theme's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeThemeRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeThemeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user's profile",
        "parameters": [],
        "requestBody": {
          "description": "User's profile object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing fields)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/users/upload": {
      "post": {
        "tags": ["Auth"],
        "summary": "Upload user's avatar",
        "parameters": [],
        "requestBody": {
          "description": "User's avatar object",
          "required": true,
          "content": {
            "image/jpg": {
              "schema": {
                "$ref": "#/components/schemas/UploadAvatarRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadAvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/boards": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get all user's boards",
        "parameters": [],
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Boards"],
        "summary": "Add board",
        "parameters": [],
        "requestBody": {
          "description": "Board's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBoardRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/boards/{id}": {
      "put": {
        "tags": ["Boards"],
        "summary": "Edit board by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of board to update",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Board's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBoardRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete board by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of board to delete",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "204": {
            "description": "Successful removal of a board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/boards/columnorder/{id}": {
      "patch": {
        "tags": ["Boards"],
        "summary": "Edit order of columns in board",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of board to update",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Board's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditColumnOrderRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete board by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of board to delete",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "204": {
            "description": "Successful removal of a board",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/columns/{parentBoard's_id}": {
      "get": {
        "tags": ["Columns"],
        "summary": "Get all board's columns",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of parent board",
            "required": true,
            "type": "string"
          }
        ],

        "security": [{ "bearerAuth": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllColumnsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/columns/": {
      "post": {
        "tags": ["Columns"],
        "summary": "Add column",
        "parameters": [],
        "requestBody": {
          "description": "Board's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddColumnRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/columns/{id}": {
      "patch": {
        "tags": ["Columns"],
        "summary": "Edit column by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of column to edit",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Column's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditColumnRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditColumnResponse"
                }
              }
            }
          },
          "404": {
            "description": "Column not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete column by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of column to delete",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "204": {
            "description": "Successful removal of a column",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Column not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/tasks/{parentColumn's_id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all column's tasks",
        "parameters": [
          {
            "name": "parentColumn",
            "in": "path",
            "description": "ID of parent column",
            "required": true,
            "type": "string"
          }
        ],

        "security": [{ "bearerAuth": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTasksResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Add task",
        "parameters": [],
        "requestBody": {
          "description": "Task's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTaskRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/tasks/{id}": {
      "put": {
        "tags": ["Tasks"],
        "summary": "Edit task by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to edit",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Task's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTaskRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to delete",
            "required": true,
            "type": "string"
          }
        ],
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "204": {
            "description": "Successful removal of a task",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskNotFoundResponse"
                }
              }
            }
          }
        }
      }
    },

    "/api/backgrounds": {
      "get": {
        "tags": ["Backgrounds"],
        "summary": "Get board's backgrounds",
        "parameters": [],

        "security": [{ "bearerAuth": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBackgroundsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

    "/api/help/email": {
      "post": {
        "tags": ["Help"],
        "summary": "Need help form submitting",
        "parameters": [],
        "requestBody": {
          "description": "Need help form object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeedHelpFormRequest"
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }],

        "responses": {
          "200": {
            "description": "Email sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeedHelpFormResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andrew"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Andrew@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "AuthResponse": {
        "type": "object",

        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzEwNWI0Yzk3NTI4ZTVkYmY1MDNhZSIsImlhdCI6MTY4NTEzNzEyNiwiZXhwIjoxNjg1MjE5OTI2fQ.yTZiezf2_N8N3SLa2pmI-ZRKXy1J9gg2nH-vGwySbqs"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Andrew"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "Andrew@example.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "https://i.pinimg.com/originals/b7/34/e9/b734e9d303af5f13994c12d407862658.png"
              },
              "theme": {
                "type": "string",
                "description": "Users's theme",
                "example": "dark"
              }
            }
          }
        }
      },

      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Andrew"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "Andrew@example.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "https://i.pinimg.com/originals/b7/34/e9/b734e9d303af5f13994c12d407862658.png"
              },
              "theme": {
                "type": "string",
                "description": "Users's theme",
                "example": "dark"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Andrew@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "ChangeThemeRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["dark", "light", "violet"],
            "example": "dark"
          }
        }
      },
      "ChangeThemeResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "theme": {
                "type": "string",
                "description": "User's theme",
                "enum": ["dark", "light", "violet"],
                "example": "dark"
              }
            }
          }
        }
      },

      "UpdateProfileRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andrew"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Andrew@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "example": "https://i.pinimg.com/originals/b7/34/e9/b734e9d303af5f13994c12d407862658.png"
          }
        }
      },

      "UpdateProfileResponse": {
        "type": "object",

        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzEwNWI0Yzk3NTI4ZTVkYmY1MDNhZSIsImlhdCI6MTY4NTEzNzEyNiwiZXhwIjoxNjg1MjE5OTI2fQ.yTZiezf2_N8N3SLa2pmI-ZRKXy1J9gg2nH-vGwySbqs"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Andrew"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "Andrew@example.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL",
                "example": "https://i.pinimg.com/originals/b7/34/e9/b734e9d303af5f13994c12d407862658.png"
              },
              "theme": {
                "type": "string",
                "description": "Users's theme",
                "example": "dark"
              }
            }
          }
        }
      },

      "UploadAvatarRequest": {
        "type": "object",

        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UploadAvatarResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },

          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "example": "https://i.pinimg.com/originals/b7/34/e9/b734e9d303af5f13994c12d407862658.png"
          }
        }
      },

      "NeedHelpFormRequest": {
        "type": "object",
        "required": ["email", "comment"],
        "properties": {
          "replyEmail": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "Andrew@example.com"
          },
          "comment": {
            "type": "string",
            "description": "User's comment",
            "example": "I need help with application"
          }
        }
      },
      "NeedHelpFormResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Current user's name",
            "example": "Email sent"
          }
        }
      },
      "BadRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Missing fields"
          }
        }
      },
      "ConflictResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email in use"
          }
        }
      },

      "GetAllBoardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "columnOrder": {
              "type": "array",
              "items": {}
            },
            "_id": {
              "type": "string",
              "description": "Board's id",
              "example": "648f22dda2d8f8537d580812"
            },
            "title": {
              "type": "string",
              "description": "Board's title",
              "example": "New Board"
            },
            "currentBg": {
              "type": "string",
              "description": "Board's backgound color id",
              "example": "64972a45fd234eee115a1774"
            },
            "icon": {
              "type": "number",
              "description": "Board's icon",
              "enum": [
                "icon-Project",
                "icon-hexagon-01",
                "icon-lightning-02",
                "icon-loading-03",
                "icon-star-04",
                "icon-puzzle-piece-02",
                "icon-container",
                "icon-colors"
              ],
              "default": "icon-Project",
              "example": "icon-hexagon-01"
            },

            "owner": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Board's owner id",
                  "example": "648f22dda2d8f8537d582549"
                },
                "name": {
                  "type": "string",
                  "description": "Board's owner name",
                  "example": "Andrew"
                },
                "email": {
                  "type": "string",
                  "description": "Board's owner email",
                  "format": "email",
                  "example": "Andrew@example.com"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "Board's owner avatar URL",
                  "example": "https://i.pinimg.com/originals/b7/34/e9/b734e9d303af5f13994c12d407862658.png"
                },
                "theme": {
                  "type": "string",
                  "description": "Board's theme",
                  "example": "dark"
                }
              }
            }
          }
        }
      },
      "AddBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Boards's title",
            "example": "New Board"
          },
          "currentBg": {
            "type": "string",
            "description": "Board's backgound color id",
            "example": "64972a45fd234eee115a1774"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "enum": [
              "icon-Project",
              "icon-hexagon-01",
              "icon-lightning-02",
              "icon-loading-03",
              "icon-star-04",
              "icon-puzzle-piece-02",
              "icon-container",
              "icon-colors"
            ],
            "default": "icon-Project",
            "example": "icon-hexagon-01"
          }
        }
      },
      "AddBoardResponse": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Boards's title",
            "example": "New Board"
          },
          "currentBg": {
            "type": "string",
            "description": "Board's backgound color id",
            "example": "64972a45fd234eee115a1774"
          },

          "icon": {
            "type": "string",
            "description": "Board's icon",
            "enum": [
              "icon-Project",
              "icon-hexagon-01",
              "icon-lightning-02",
              "icon-loading-03",
              "icon-star-04",
              "icon-puzzle-piece-02",
              "icon-container",
              "icon-colors"
            ],
            "default": "icon-Project",
            "example": "icon-hexagon-01"
          },
          "owner": {
            "type": "string",
            "description": "Board's owner(user) id",
            "example": "648f22dda2d8f8537d580812"
          },
          "_id": {
            "type": "string",
            "description": "Board's id",
            "example": "984f22GGa2d8f8537d580812"
          }
        }
      },
      "EditBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "New board's title",
            "example": "New name board"
          },
          "currentBg": {
            "type": "string",
            "description": "New board's backgound color id",
            "example": "64972a45fd234eee115a1774"
          },
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "enum": [
              "icon-Project",
              "icon-hexagon-01",
              "icon-lightning-02",
              "icon-loading-03",
              "icon-star-04",
              "icon-puzzle-piece-02",
              "icon-container",
              "icon-colors"
            ],
            "default": "icon-Project",
            "example": "icon-hexagon-01"
          }
        }
      },
      "EditBoardResponse": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "description": "Board's icon",
            "enum": [
              "icon-Project",
              "icon-hexagon-01",
              "icon-lightning-02",
              "icon-loading-03",
              "icon-star-04",
              "icon-puzzle-piece-02",
              "icon-container",
              "icon-colors"
            ],
            "default": "icon-Project",
            "example": "icon-hexagon-01"
          },
          "_id": {
            "type": "string",
            "description": "Board's id",
            "example": "6499c39b7c5e6e3a44c5e738"
          },
          "title": {
            "type": "string",
            "description": "New boards's title",
            "example": "New Board"
          },
          "currentBg": {
            "type": "string",
            "description": "Board's backgound color id",
            "example": "64972a45fd234eee115a1774"
          },
          "owner": {
            "type": "string",
            "description": "Board's owner(user) id",
            "example": "648f22dda2d8f8537d580812"
          }
        }
      },
      "DeleteBoardResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Successful removal of a board",
            "example": "Board with id: 648f22dda2d8f8537d580812 deleted"
          }
        }
      },

      "BoardNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Board not found",
            "example": "Board with id: 648f22dda2d8f8537d580812 not found"
          }
        }
      },

      "EditColumnOrderRequest": {
        "type": "array",
        "items": {
          "properties": {
            "columnOrder": {
              "type": "string",
              "description": "Column's id",
              "example": "648f22dda2d8f8537d580812",
              "default": "[]"
            }
          }
        },
        "example": ["648f22dda2d8f8537d580812", "524f22dda2d8f8537d598561"]
      },

      "GetAllColumnsRequest": {
        "type": "object",
        "required": ["parentBoard"],
        "properties": {
          "parentBoard": {
            "type": "string",
            "description": "Columns's owner(board) id",
            "example": "648f22dda2d8f8537d580812"
          }
        }
      },
      "GetAllColumnsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Column's id",
              "example": "648f22dda2d8f8537d580812"
            },
            "title": {
              "type": "string",
              "description": "Column's title",
              "example": "New Column"
            },
            "parentBoard": {
              "type": "string",
              "description": "Columns's owner(board) id",
              "example": "125f22dda2d8f8537d536948"
            },
            "tasks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Task's id",
                    "example": "648f22dda2d8f8537d580812"
                  },
                  "title": {
                    "type": "string",
                    "description": "Task's title",
                    "example": "New Task"
                  },
                  "parentColumn": {
                    "type": "string",
                    "description": "Task's owner(column) id",
                    "example": "125f22dda2d8f8537d536948"
                  },
                  "description": {
                    "type": "string",
                    "description": "Task's description",
                    "example": "My task's description"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Task's priority",
                    "default": "medium",
                    "example": "low"
                  },
                  "deadline": {
                    "type": "string",
                    "format": "date",
                    "description": "Task's deadline",
                    "example": "01-01-1970"
                  }
                }
              }
            }
          }
        }
      },
      "AddColumnRequest": {
        "type": "object",
        "required": ["parentBoard"],
        "properties": {
          "parentBoard": {
            "type": "string",
            "description": "Columns's owner(board) id",
            "example": "648f22dda2d8f8537d580812"
          },
          "title": {
            "type": "string",
            "description": "Column's title",
            "example": "New column"
          }
        }
      },

      "AddColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Column's id",
            "example": "648f22dda2d8f8537d580812"
          },
          "title": {
            "type": "string",
            "description": "Column's title",
            "example": "New Column"
          },
          "parentBoard": {
            "type": "string",
            "description": "Columns's owner(board) id",
            "example": "125f22dda2d8f8537d536948"
          }
        }
      },
      "EditColumnRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "New column's title",
            "example": "New column's name"
          }
        }
      },
      "EditColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Column's id",
            "example": "648f22dda2d8f8537d580812"
          },
          "title": {
            "type": "string",
            "description": "Column's new title",
            "example": "New column's name"
          },
          "parentBoard": {
            "type": "string",
            "description": "Columns's owner(board) id",
            "example": "125f22dda2d8f8537d536948"
          }
        }
      },

      "ColumnNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Column not found",
            "example": "Column not found"
          }
        }
      },

      "DeleteColumnResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Successful removal of a column",
            "example": "Successful removal of a column"
          }
        }
      },
      "GetAllTasksRequest": {
        "type": "object",
        "required": ["parentColumn"],
        "properties": {
          "parentColumn": {
            "type": "string",
            "description": "Tasks's owner(column) id",
            "example": "648f22dda2d8f8537d580812"
          }
        }
      },

      "GetAllTasksResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Column's id",
              "example": "648f22dda2d8f8537d580812"
            },
            "title": {
              "type": "string",
              "description": "Column's title",
              "example": "New Column"
            },
            "parentColumn": {
              "type": "string",
              "description": "Task's owner(column) id",
              "example": "125f22dda2d8f8537d536948"
            },
            "priority": {
              "type": "string",
              "description": "Task's priority",
              "enum": ["without", "low", "medium", "high"],
              "example": "medium"
            },
            "description": {
              "type": "string",
              "description": "Task's description",
              "example": "My task's description"
            },
            "deadline": {
              "type": "string",
              "format": "date",
              "description": "Task's deadline",
              "example": "01-01-1970"
            }
          }
        }
      },
      "AddTaskRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task's title",
            "example": "New task"
          },
          "parentColumn": {
            "type": "string",
            "description": "Task's owner(column) id",
            "example": "648f22dda2d8f8537d580812"
          },
          "description": {
            "type": "string",
            "description": "Task's description",
            "example": "My task's description"
          },
          "priority": {
            "type": "string",
            "description": "Task's priority",
            "enum": ["without", "low", "medium", "high"],
            "default": "medium",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "description": "Task's deadline",
            "example": "01-01-1970"
          }
        }
      },

      "AddTaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Task's id",
            "example": "648f22dda2d8f8537d580812"
          },
          "title": {
            "type": "string",
            "description": "Task's title",
            "example": "New task"
          },
          "parentColumn": {
            "type": "string",
            "description": "Task's owner(column) id",
            "example": "125f22dda2d8f8537d536948"
          },
          "description": {
            "type": "string",
            "description": "Task's description",
            "example": "My task's description"
          },
          "priority": {
            "type": "string",
            "description": "Task's priority",
            "default": "medium",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "description": "Task's deadline",
            "example": "01-01-1970"
          }
        }
      },

      "EditTaskRequest": {
        "type": "object",
        "required": ["title", "description", "priority", "deadline", "parentColumn"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task's title",
            "example": "New task"
          },
          "description": {
            "type": "string",
            "description": "Task's description",
            "example": "My task's description"
          },
          "priority": {
            "type": "string",
            "description": "Task's priority",
            "enum": ["without", "low", "medium", "high"],
            "default": "medium",
            "example": "low"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "description": "Task's deadline",
            "example": "01-01-1970"
          },
          "parentColumn": {
            "type": "string",
            "description": "Task's owner(column) id",
            "example": "125f22dda2d8f8537d536948"
          }
        }
      },

      "EditTaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Task's id",
            "example": "648f22dda2d8f8537d580812"
          },
          "title": {
            "type": "string",
            "description": "Task's title",
            "example": "New task"
          },
          "parentColumn": {
            "type": "string",
            "description": "Task's owner(column) id",
            "example": "125f22dda2d8f8537d536948"
          },
          "description": {
            "type": "string",
            "description": "Task's description",
            "example": "My task's description"
          },
          "priority": {
            "type": "string",
            "description": "Task's priority",
            "enum": ["without", "low", "medium", "high"],
            "default": "medium",
            "example": "low"
          },
          "column": {
            "type": "string",
            "description": "Task's owner(column) id",
            "example": "125f22dda2d8f8537d536948"
          },
          "deadline": {
            "type": "string",
            "format": "date",
            "description": "Task's deadline",
            "example": "01-01-1970"
          }
        }
      },
      "TaskNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Task not found",
            "example": "Task not found"
          }
        }
      },

      "DeleteTaskResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Successful removal of a task",
            "example": "task deleted"
          }
        }
      },

      "GetAllBackgroundsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Background's id",
              "example": "64972a45fd234eee115a1774"
            },
            "desktopURL": {
              "type": "string",
              "description": "Background desktop url",
              "example": "https://res.cloudinary.com/dof7bcg6j/image/upload/v1687433723/DesktopFonts/diego-ph-wyeapf7Gy-U-unsplash_9_dhpf3b.jpg"
            },
            "retinaURL": {
              "type": "string",
              "description": "Background retina url",
              "example": "https://res.cloudinary.com/dof7bcg6j/image/upload/v1687766598/retinaFonts/diego-ph-wyeapf7Gy-U-unsplash_9_hibunu.jpg"
            },
            "tabletURL": {
              "type": "string",
              "description": "Background tablet url",
              "example": "https://res.cloudinary.com/dof7bcg6j/image/upload/v1687433952/TabletFonts/diego-ph-wyeapf7Gy-U-unsplash_17_ezodbf.jpg"
            },
            "mobileURL": {
              "type": "string",
              "description": "Background mobile url",
              "example": "https://res.cloudinary.com/dof7bcg6j/image/upload/v1687434017/MobFonts/diego-ph-wyeapf7Gy-U-unsplash_32_x73ju7.jpg"
            },
            "previewURL": {
              "type": "string",
              "description": "Background preview url",
              "example": "https://res.cloudinary.com/dof7bcg6j/image/upload/v1687942226/DesktopFonts/PRreviewFonts/Vector13_ilcfaz.png"
            }
          }
        }
      }
    }
  }
}
